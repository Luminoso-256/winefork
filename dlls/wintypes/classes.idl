/*
 * Runtime Classes for wintypes.dll
 *
 * Copyright 2022 Zhiyi Zhang for CodeWeavers
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
 */

#pragma makedep register

#ifdef __WIDL__
#pragma winrt ns_prefix
#endif

#define DO_NO_IMPORTS
#define _WINTYPES
#include "windows.foundation.idl"
#include "windows.foundation.metadata.idl"
//#include "windows.storage.streams.idl"

namespace Windows.Storage.Streams {
    interface IBuffer;
    interface IBufferFactory;
    interface IBufferStatics;
    interface IBufferByteAccess;
    interface IDataReader;
    interface IDataReaderFactory;
    interface IDataReaderStatics;
    interface IDataWriter;
    interface IDataWriterFactory;

    [
        activatable(Windows.Storage.Streams.IBufferFactory, Windows.Foundation.UniversalApiContract, 1.0),
        contract(Windows.Foundation.UniversalApiContract, 1.0),
        marshaling_behavior(agile),
        static(Windows.Storage.Streams.IBufferStatics, Windows.Foundation.UniversalApiContract, 1.0),
        threading(both)
    ]
    runtimeclass Buffer
    {
        [default] interface Windows.Storage.Streams.IBuffer;
    }

    [
        activatable(Windows.Storage.Streams.IDataReaderFactory, Windows.Foundation.UniversalApiContract, 1.0),
        contract(Windows.Foundation.UniversalApiContract, 1.0),
        marshaling_behavior(agile),
        static(Windows.Storage.Streams.IDataReaderStatics, Windows.Foundation.UniversalApiContract, 1.0),
        threading(both)
    ]
    runtimeclass DataReader
    {
        [default] interface Windows.Storage.Streams.IDataReader;
        interface Windows.Foundation.IClosable;
    }

    [
        contract(Windows.Foundation.UniversalApiContract, 1.0),
        marshaling_behavior(agile)
    ]
    runtimeclass DataReaderLoadOperation
    {
        [default] interface Windows.Foundation.IAsyncOperation<UINT32>;
    }


    [
        activatable(Windows.Foundation.UniversalApiContract, 1.0),
        activatable(Windows.Storage.Streams.IDataWriterFactory, Windows.Foundation.UniversalApiContract, 1.0),
        contract(Windows.Foundation.UniversalApiContract, 1.0),
        marshaling_behavior(agile),
        threading(both)
    ]
    runtimeclass DataWriter
    {
        [default] interface Windows.Storage.Streams.IDataWriter;
        interface Windows.Foundation.IClosable;
    }

    [
        contract(Windows.Foundation.UniversalApiContract, 1.0),
        marshaling_behavior(agile)
    ]
    runtimeclass DataWriterStoreOperation
    {
        [default] interface Windows.Foundation.IAsyncOperation<UINT32>;
    }
}

//#include "windows.storage.idl"